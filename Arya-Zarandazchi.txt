https://codepen.io/Aryanz02/pen/OJPwWZo?editors=1100

 1. What is Semantic HTML? 
    2. What is HTML used for? 
    HTML is used to markup text. Semantic HTML gives the text meaning.

    3. What is an attribute and where do we put it? 
    An attribute gives additional information about an element. You put it in the opening tag.

    4. What is the h1 tag used for? How many times should I use it on a page?
    The H1 tag is used to the most important heading. You should use it once on a page.

    5. Name two tags that have required attributes
    The image and hyperlink tags have required attributes.

    6. What do we put in the head of our HTML document? 
    The first Heading (H1) and the Navigation bar.

    7. What is an id? 
    An id is a selector that can only be used once in a document. 

    8. What elements can I add an id to? 
    Any element, but it can only be used once.

    9. How many times can I use the same id on a page? 
    It can only be used once.

    10. What is a class? 
    A class is an selector that can be applied multiple times throught a document.

    11. What elements can I add a class to? 
    You can add it to any element.

    12. How many times can I use the same class on a page? 
    You can use a class as many times as you would like.

    13. How do I get my link to open in a new tab?
    <a href="http://newtab.com"> Open this link</a>

    14. What is the alt attribute used for? 
    Text phrases that describe an image. We use them for accesibility purposes. 

    15. How do I reference an id?
    You reference an id with "#"

    16. What is the difference between a section and a div
    A section is semantic HTML, and means the things grouped together belong together. A div is used for styling purposes to divide content.
   
    17. What is CSS used for? 
    CSS is used to configure and style the page.

    18. How to we select an element? Example - every h2 on the page
    You select it by calling its name only. Example - h2{}

    19. What is the difference between a class and an id? - Give me an example of when I might use each one
    You would use an id when you only have one element on the page. Use a class when you have multiple elements to style.
    
    20. How do we select classes in CSS?
    You select a class by ".classname"

    21. How do we select a p element with a single class of “human””?
    You would select it by it's class: ".human"

    22. What is a parent child selector? When would this be useful? 
    You use a parent/child selector to be more specific of what you are trying to style. It is useful in navigation bars.

    ***23. How do you select all links within a div with the class of sidebar?

    24. What is a pseudo selector?
    A pseudo selector selects an element in a specific state. Examples are: hover, active, visited, and focus.
     
    25. What do we use the change the spacing between lines?
    You use "line-height" to change spacing between line.

    26. What do we use to change the spacing between letters?
    You use "letter-spacing" to change spacing between letters.
    
    27. What do we use to to change everything to CAPITALS? lowercase? Capitalize?
    You would use "text-transform" along with "uppercase", "lowercase", or "Capitalize" respectively.

    28. How do I add a 1px border around my div that is dotted and black?
    div{
        border: 1px dotted black;
    }

    29. How do I select everything on the page? 
    You select everything on the page by using the universal selector "*"

    30. How do I write a comment in CSS?
    Write a comment inside the */ /*.

    31. How do I find out what file I am in, when I am using the command line? 
    Type ls

    32. Using the command line - how do I see a list of files/folders in my current folder?
    Type "ls" to see a list of your current folder.

    33. How do I remove a file via the command line? Why do I have to be careful with this? 
    Use "rm <file name>" to remove a file. Be caareful, because you will not get a 'are you sure?' prompt and it will not go into the recycle bin.

    34. Why should I use version control? 
    Because it saves versions of your code, allowing you to go back to a previous version if you need to make changes.

    35. How often should I commit to github?
    Whenever you make a big change, or every 20ish minutes.

    36. What is the command we would use to push our repo up to github? 
    The command you use is "git push origin firtname-lastname"

    37. Walk me through Lambda's git flow. 
    1. Fork
    2. Add your PM as a collaborator
    3. Copy the repo
    4. On the CL, navigate to where you want to place the file
    5. Use "git clone <file>
    6. Create a branch of your name
    7. Use Code . to do your work
    8. Add using "add ."
    9. commit using " git commit -m "helpful summary here"
    10. push using "git push origin Arya-Zarandazchi"
    11. Pull request
    12. Add your PM as a reviewer 

Stretch Questions

    1. What is the difference between an inline element and a block element?

        A block-level element always starts on a new line and takes up the full width available

        An inline element does not start on a new line and only takes up as much width as necessary.

    2. What happens when an element is positioned absolutely? 
        It means its position is fixed.

    3. How do I make an element take up only the amount of space it needs but also have the ability to give it a width? 

    4. Name 3 elements that are diplay block by default, 2 elements that are display inline by default and 1 element that is display inline-block by default
        block: header, h1-6, div
        inline: a, em
        inline-block:button

    5. In your own words, explain the box model. What is the fix for the box model? 
        MBPC. All content is surrounded by boxes, almost like a nesting doll. The surrounding area is divided up by Margin, Border, Padding and Content. The problem with this, is you might end up having to do a lot of math, if you start messing with too many of the settings. You fix this by using box-sizing: border box

    [ ] While the processes learned here will set you up to be successful in most situations, they are just the tip of the iceberg in learning Git. Independently research the following topics to learn more about Git.
   [ ] Research and understand what a `merge conflict` is and how to resolve it.
   [ ] Research the Git commands `pull`, `rebase`, `merge`. These commands will allow you to bring in changes that other developers push to the master branch.
   [ ] Research the Git commands `reset `, `revert`, `clean`. These commands will allow you to go back and amends previous commits you have made.

    [ ] Research and set up a Graphical User Interface (GUI) Git console. 

    [ ] Research and setup SSH keys with GitHub, so that you do not need to input your username/password each time you push. 